{
  "mappings": [],
  "lhsLabels": [
    {
      "description": "Section header introducing the algorithm specifications",
      "category": "Navigation",
      "ranges": [
        {
          "start": 0,
          "end": 29
        }
      ]
    },
    {
      "description": "Introduction of the general functions CIPHER() and INVCIPHER() for AES algorithms",
      "category": "Definition",
      "ranges": [
        {
          "start": 31,
          "end": 161
        }
      ]
    },
    {
      "description": "Footnote explaining why neutral terminology (CIPHER/INVCIPHER) is used instead of encryption/decryption",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 163,
          "end": 361
        }
      ]
    },
    {
      "description": "Explanation of rounds and round keys as core components of the CIPHER and INVCIPHER algorithms",
      "category": "Definition",
      "ranges": [
        {
          "start": 363,
          "end": 651
        }
      ]
    },
    {
      "description": "Definition of the KEYEXPANSION() function that generates round keys from the cipher key",
      "category": "Definition",
      "ranges": [
        {
          "start": 653,
          "end": 964
        }
      ]
    },
    {
      "description": "Explanation of the differences between AES-128, AES-192, and AES-256 in terms of key length, number of rounds, and key expansion",
      "category": "Definition",
      "ranges": [
        {
          "start": 966,
          "end": 1560
        }
      ]
    },
    {
      "description": "Reference to another section for implementation issues related to key length, block size, and rounds",
      "category": "Navigation",
      "ranges": [
        {
          "start": 1562,
          "end": 1666
        }
      ]
    },
    {
      "description": "Table showing the key-block-round combinations for the three AES variants",
      "category": "Parameter",
      "ranges": [
        {
          "start": 1668,
          "end": 1935
        }
      ]
    },
    {
      "description": "Mathematical definition of the three AES variants in terms of the CIPHER() function",
      "category": "Definition",
      "ranges": [
        {
          "start": 1937,
          "end": 2525
        }
      ]
    },
    {
      "description": "Definition of inverse permutations by replacing CIPHER() with INVCIPHER()",
      "category": "Definition",
      "ranges": [
        {
          "start": 2527,
          "end": 2614
        }
      ]
    },
    {
      "description": "Navigation reference to sections containing specifications of CIPHER(), KEYEXPANSION(), and INVCIPHER()",
      "category": "Navigation",
      "ranges": [
        {
          "start": 2616,
          "end": 2734
        }
      ]
    },
    {
      "description": "Section header for CIPHER() function",
      "category": "Navigation",
      "ranges": [
        {
          "start": 2736,
          "end": 2751
        }
      ]
    },
    {
      "description": "Overview of the four transformations that compose the rounds in CIPHER(): SubBytes(), ShiftRows(), MixColumns(), and ADDROUNDKEY()",
      "category": "Definition",
      "ranges": [
        {
          "start": 2753,
          "end": 3128
        }
      ]
    },
    {
      "description": "Explanation of notation used in transformation specifications and reference to sections containing detailed specifications",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 3130,
          "end": 3414
        }
      ]
    },
    {
      "description": "Explanation of how round keys for ADDROUNDKEY() are generated by KEYEXPANSION()",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 3416,
          "end": 3600
        }
      ]
    },
    {
      "description": "Reference to the pseudocode for CIPHER() in Algorithm 1",
      "category": "Navigation",
      "ranges": [
        {
          "start": 3602,
          "end": 3652
        }
      ]
    },
    {
      "description": "Pseudocode implementation of the CIPHER() function",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 3654,
          "end": 4267
        }
      ]
    },
    {
      "description": "Explanation of the steps in the CIPHER() algorithm, including initial state setup, round transformations, and final output",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 4269,
          "end": 4680
        }
      ]
    },
    {
      "description": "Section header for SubBytes() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 4682,
          "end": 4702
        }
      ]
    },
    {
      "description": "Definition of SUBBYTES() as an invertible, non-linear transformation using an S-box",
      "category": "Definition",
      "ranges": [
        {
          "start": 4704,
          "end": 4907
        }
      ]
    },
    {
      "description": "Introduction to the two-step construction of the S-box output byte",
      "category": "Definition",
      "ranges": [
        {
          "start": 4909,
          "end": 5116
        }
      ]
    },
    {
      "description": "First step of S-box transformation: computing the multiplicative inverse in the finite field",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 5118,
          "end": 5362
        }
      ]
    },
    {
      "description": "Second step of S-box transformation: applying an affine transformation to the bits",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 5364,
          "end": 5652
        }
      ]
    },
    {
      "description": "Matrix form representation of the affine transformation in the S-box",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 5654,
          "end": 6464
        }
      ]
    },
    {
      "description": "Reference to Figure 2 illustrating the SUBBYTES() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 6466,
          "end": 6523
        }
      ]
    },
    {
      "description": "Figure caption for illustration of SUBBYTES()",
      "category": "Diagram",
      "ranges": [
        {
          "start": 6525,
          "end": 6563
        }
      ]
    },
    {
      "description": "Explanation of how to use the S-box table with an example",
      "category": "Example",
      "ranges": [
        {
          "start": 6565,
          "end": 6839
        }
      ]
    },
    {
      "description": "Table 4 showing the S-box substitution values in hexadecimal format",
      "category": "Parameter",
      "ranges": [
        {
          "start": 6841,
          "end": 8575
        }
      ]
    },
    {
      "description": "Section header for ShiftRows() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 8577,
          "end": 8598
        }
      ]
    },
    {
      "description": "Definition of SHIFTROWS() as a transformation that cyclically shifts bytes in the last three rows of the state",
      "category": "Definition",
      "ranges": [
        {
          "start": 8600,
          "end": 8917
        }
      ]
    },
    {
      "description": "Elaboration on how SHIFTROWS() moves bytes within each row of the state",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 8919,
          "end": 9178
        }
      ]
    },
    {
      "description": "Figure caption for illustration of SHIFTROWS()",
      "category": "Diagram",
      "ranges": [
        {
          "start": 9180,
          "end": 9219
        }
      ]
    },
    {
      "description": "Section header for MixColumns() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 9221,
          "end": 9243
        }
      ]
    },
    {
      "description": "Definition of MIXCOLUMNS() as a transformation that multiplies each column of the state by a fixed matrix",
      "category": "Definition",
      "ranges": [
        {
          "start": 9245,
          "end": 9513
        }
      ]
    },
    {
      "description": "Matrix multiplication formula for the MIXCOLUMNS() transformation",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 9515,
          "end": 9890
        }
      ]
    },
    {
      "description": "Expanded definition of individual output bytes for the MIXCOLUMNS() transformation",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 9892,
          "end": 10445
        }
      ]
    },
    {
      "description": "Reference to Figure 4 illustrating MIXCOLUMNS()",
      "category": "Navigation",
      "ranges": [
        {
          "start": 10447,
          "end": 10481
        }
      ]
    },
    {
      "description": "Figure caption for illustration of MIXCOLUMNS()",
      "category": "Diagram",
      "ranges": [
        {
          "start": 10483,
          "end": 10523
        }
      ]
    },
    {
      "description": "Section header for ADDROUNDKEY() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 10525,
          "end": 10548
        }
      ]
    },
    {
      "description": "Definition of ADDROUNDKEY() as a transformation that combines a round key with the state using XOR operation",
      "category": "Definition",
      "ranges": [
        {
          "start": 10550,
          "end": 11389
        }
      ]
    },
    {
      "description": "Reference to Figure 5 illustrating ADDROUNDKEY() with additional context about byte addressing",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 11391,
          "end": 11547
        }
      ]
    },
    {
      "description": "Figure caption for illustration of ADDROUNDKEY()",
      "category": "Diagram",
      "ranges": [
        {
          "start": 11549,
          "end": 11590
        }
      ]
    },
    {
      "description": "Pseudocode implementation of the KEYEXPANSION() function",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 11592,
          "end": 12171
        }
      ]
    },
    {
      "description": "Reference to figures illustrating KEYEXPANSION() for the three AES variants",
      "category": "Navigation",
      "ranges": [
        {
          "start": 12173,
          "end": 12253
        }
      ]
    },
    {
      "description": "Section header for INVCIPHER() function",
      "category": "Navigation",
      "ranges": [
        {
          "start": 12255,
          "end": 12273
        }
      ]
    },
    {
      "description": "Overview of INVCIPHER() as the inverse of CIPHER(), using inverted transformations in reverse order",
      "category": "Definition",
      "ranges": [
        {
          "start": 12275,
          "end": 12573
        }
      ]
    },
    {
      "description": "Reference to the pseudocode for INVCIPHER() in Algorithm 3",
      "category": "Navigation",
      "ranges": [
        {
          "start": 12575,
          "end": 12703
        }
      ]
    },
    {
      "description": "Figure caption for illustration of KEYEXPANSION() for AES-128",
      "category": "Diagram",
      "ranges": [
        {
          "start": 12705,
          "end": 12848
        }
      ]
    },
    {
      "description": "Figure caption for illustration of KEYEXPANSION() for AES-192",
      "category": "Diagram",
      "ranges": [
        {
          "start": 12850,
          "end": 12993
        }
      ]
    },
    {
      "description": "Figure caption for illustration of KEYEXPANSION() for AES-256",
      "category": "Diagram",
      "ranges": [
        {
          "start": 12995,
          "end": 13138
        }
      ]
    },
    {
      "description": "Section header for InvMixColumns() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 13140,
          "end": 13165
        }
      ]
    },
    {
      "description": "Definition of INVMIXCOLUMNS() as the inverse of MIXCOLUMNS(), multiplying columns by a fixed matrix",
      "category": "Definition",
      "ranges": [
        {
          "start": 13167,
          "end": 13490
        }
      ]
    },
    {
      "description": "Matrix multiplication formula for the INVMIXCOLUMNS() transformation",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 13492,
          "end": 13975
        }
      ]
    },
    {
      "description": "Expanded definition of individual output bytes for the INVMIXCOLUMNS() transformation",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 13977,
          "end": 14815
        }
      ]
    },
    {
      "description": "Section header for the inverse of ADDROUNDKEY() transformation",
      "category": "Navigation",
      "ranges": [
        {
          "start": 14817,
          "end": 14851
        }
      ]
    },
    {
      "description": "Statement that ADDROUNDKEY() is its own inverse",
      "category": "Definition",
      "ranges": [
        {
          "start": 14853,
          "end": 14915
        }
      ]
    },
    {
      "description": "Section header for EQINVCIPHER() function",
      "category": "Navigation",
      "ranges": [
        {
          "start": 14917,
          "end": 14940
        }
      ]
    },
    {
      "description": "Explanation of EQINVCIPHER() as an alternative specification of the inverse cipher with reference to efficiency considerations",
      "category": "Definition",
      "ranges": [
        {
          "start": 14942,
          "end": 15439
        }
      ]
    },
    {
      "description": "Introduction to the pseudocode for EQINVCIPHER() and KEYEXPANSIONEIC()",
      "category": "Navigation",
      "ranges": [
        {
          "start": 15441,
          "end": 15700
        }
      ]
    },
    {
      "description": "Pseudocode implementation of the EQINVCIPHER() function",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 15702,
          "end": 16254
        }
      ]
    },
    {
      "description": "Pseudocode implementation of the KEYEXPANSIONEIC() function",
      "category": "Algorithm",
      "ranges": [
        {
          "start": 16256,
          "end": 17040
        }
      ]
    },
    {
      "description": "Explanation of how the modified key schedule in KEYEXPANSIONEIC() differs from the original key schedule",
      "category": "Elaboration",
      "ranges": [
        {
          "start": 17042,
          "end": 17335
        }
      ]
    }
  ],
  "rhsLabels": []
}